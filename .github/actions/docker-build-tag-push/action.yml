# Based on
# - https://blog.jannikwempe.com/github-actions-trunk-based-development#heading-a-brief-introduction-to-trunk-based-development
# - https://blog.derlin.ch/github-actions-reusable-workflow-docker-images
# - https://github.com/BretFisher/docker-build-workflow/blob/main/.github/workflows/reusable-docker-build.yaml

name: Build, tag & push docker image
description: Build, tag & push docker image

inputs:
  docker-image:
    description: "Optional input to set docker image name. Defaults to current repository"
    required: false
    default: ghcr.io/${{ github.repository }}
  environment:
    description: "Required input to set environment"
    required: true
  docker-context:
    description: "Optional input to set docker context"
    required: false
    default: "."
  build-args:
    description: "Optional input to set docker build-time variables"
    required: false
    default: ""
  docker-platforms:
    description: "Optional input list to set docker target platforms for build. Defaults to linux/amd64"
    required: false
    default: "linux/amd64"
  push:
    description: "Optional input can be set to specify whether the Docker image should be pushed to the registry. Defaults to false"
    required: false
    default: "false"
  registry-password:
    description: "Optional input for registry password"
    default: ${{ github.token }}
    required: false

outputs:
  image-tag:
    description: "Docker image tag"
    value: ${{ steps.image-tag.outputs.image-tag }}

runs:
  using: composite
  steps:
    - id: environment
      uses: ASzc/change-string-case-action@v5
      with:
        string: ${{inputs.environment}}

    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2

    - name: Setup buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Set Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{inputs.docker-image}}
        tags: |
          type=raw,value={{date 'YYYYMMDD'}}-{{sha}}-${{steps.environment.outputs.lowercase}},priority=500
          type=ref,event=tag,priority=400
          type=raw,value=${{steps.environment.outputs.lowercase}},enable=${{steps.environment.outputs.lowercase!=''}},priority=300
          type=ref,event=branch,suffix=-{{ sha }},prefix=${{steps.environment.outputs.lowercase}}-,priority=200
          type=raw,value=latest,enable={{is_default_branch}},priority=100
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      if: ${{ inputs.push == 'true' && true || false }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.registry-password }}

    - name: Build & push Docker image
      id: docker_image
      uses: docker/build-push-action@v4
      with:
        context: ${{inputs.docker-context}}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{inputs.docker-platforms}}
        build-args: ${{inputs.build-args}}
        push: ${{inputs.push}}
        builder: ${{ steps.buildx.outputs.name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        pull: true

    - name: Output image tag
      id: image-tag
      shell: bash
      run: echo "image-tag=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT