name: Composer update

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Optional input to set an operating systems which the workflow uses. Defaults to ubuntu-latest if not set"
        required: false
        type: string
        default: "ubuntu-latest"
      timeout-minutes:
        description: "Optional input to set timeout minutes. Defaults to 15"
        required: false
        type: number
        default: 15
      php-version:
        description: "Optional input to set PHP version"
        required: false
        type: string
        default: "8.2"
      node-version:
        description: "Optional input to set node version"
        required: false
        type: string
        default: "20.x"
      composer-version:
        description: "Optional input to set composer version. Defaults to 2.6"
        type: string
        required: false
        default: "2.6"
      branch-prefix:
        description: "Optional input to set branch prefix. Defaults to composer-update"
        type: string
        required: false
        default: composer-update
      pr-reviewers:
        description: "Optional input to set PR reviewers"
        type: string
        required: false
        default: ""
      pr-labels:
        description: "Optional input to set PR labels"
        type: string
        required: false
        default: ""
      pr-base-branch:
        description: "Optional input to set PR's base branch. Defaults to main"
        type: string
        required: false
        default: ""

jobs:
  docker-trigger-deploy:
    name: Deploy by pushing docker image and triggering deploy workflow
    runs-on: ${{inputs.runs-on}}
    timeout-minutes: ${{inputs.timeout-minutes}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{inputs.php-version}}
          tools: composer

      - name: Validate Composer files
        run: composer validate --strict

      - name: Install Dependencies
        uses: php-actions/composer@v6
        with:
          version: ${{inputs.composer-version}}
          args: install --no-progress --prefer-dist --no-interaction

      - name: Check for outdated dependencies
        id: outdated
        run: |
          composer outdated --direct --no-interaction | tee outdated.log
          if [[ -s "outdated.log" ]]; then
            echo "update_needed=true" >> "$GITHUB_ENV"
          else
            echo "update_needed=false" >> "$GITHUB_ENV"
          fi
      
      - name: Update Dependencies
        if: env.update_needed == 'true'
        uses: php-actions/composer@v6
        with:
          version: ${{inputs.composer-version}}
          args: update --no-progress --prefer-dist --no-interaction

      - name: Check for Changes
        id: git-status
        if: env.update_needed == 'true'
        run: |
          if git diff --exit-code "composer.json" "composer.lock"; then
            echo "changes=false" >> "$GITHUB_ENV"
          else
            echo "changes=true" >> "$GITHUB_ENV"
          fi

      - name: Create and Push Update Branch
        id: create-branch
        if: env.changes == 'true'
        run: |
          BRANCH_NAME="c${{inputs.branch-prefix}}-$(date +'%Y%m%d')"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH_NAME"
          git add "composer.json" "composer.lock"
          git commit -m "Auto update composer ($(date +'%Y%m%d'))"
          git push origin "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> "$GITHUB_ENV"

      - name: Create Pull Request
        if: env.changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          branch: ${{ env.BRANCH_NAME }}
          base: ${{inputs.pr-base-branch}}
          title: "Composer auto update"
          body: "This PR updates Composer dependencies to the latest version."
          labels: ${{inputs.pr-labels}}
          reviewers: ${{inputs.pr-reviewers}}
          token: ${{ secrets.GITHUB_TOKEN }}
