# Based on
# - https://blog.jannikwempe.com/github-actions-trunk-based-development#heading-a-brief-introduction-to-trunk-based-development
# - https://blog.derlin.ch/github-actions-reusable-workflow-docker-images

name: Build & push docker image

on:
  workflow_call:
    inputs:
      docker-image:
        description: "Required input to set docker image name"
        required: true
        type: string
      environment:
        description: "Required input to set environment"
        required: true
        type: string
      runs-on:
        description: "Optional input to set an operating systems which the workflow uses. Defaults to ubuntu-latest if not set"
        required: false
        type: string
        default: "ubuntu-latest"
      docker-context:
        description: "Optional input to set docker context"
        required: false
        type: string
        default: "."
      build-args:
        description: "Optional input to set docker build-time variables"
        required: false
        type: string
        default: ""
      docker-platforms:
        description: "Optional input list to set docker target platforms for build. Defaults to linux/amd64"
        required: false
        type: string
        default: "linux/amd64"
      latest-tag:
        description: "Optional input to set enable latest tag"
        required: false
        type: boolean
        default: false
      push:
        description: "Optional input can be set to specify whether the Docker image should be pushed to the registry. Defaults to false"
        required: false
        type: boolean
        default: false
      git-ref:
        description: "Optional input to set git branch, tag or SHA to checkout"
        required: false
        type: string
        default: ""

permissions: read-all

jobs:
  docker-build-push:
    name: Build & push docker image
    runs-on: ${{inputs.runs-on}}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{inputs.git-ref}}
          fetch-depth: ${{inputs.git-ref}} && 0 || 1 # In git-ref case: fetch all history for all branches and tags

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{inputs.docker-image}}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch,suffix=-{{ sha }},prefix=${{inputs.environment}}-
            type=raw,value=${{inputs.environment}}
            type=raw,value={{ sha }}
          flavor: |
            latest=${{inputs.latest-tag}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: ${{inputs.push}}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image
        id: docker_image
        uses: docker/build-push-action@v4
        with:
          context: ${{inputs.docker-context}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{inputs.docker-platforms}}
          build-args: ${{inputs.build-args}}
          push: ${{inputs.push}}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker image version
        run: echo ${{ steps.docker_image.outputs.imageid }}
