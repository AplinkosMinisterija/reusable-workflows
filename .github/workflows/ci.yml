name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  checkov-scan:
    runs-on: ubuntu-latest
    name: Checkov checks
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Checkov check
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif
          quiet: true # optional: display only failed checks

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2

        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif

  test-node-validation:
    name: Test Node validation reusable workflow
    uses: ./.github/workflows/node-validation.yml
    with:
      working-directory: tests/moleculer-demo
      cache-dependency-path: tests/moleculer-demo/package-lock.json
      runs-on: ubuntu-latest
      node-version: 18.x
      enable-linter: true
      audit-level: none
      postgres-user: postgres
      postgres-password: postgres
      postgres-db: my-db
      postgres-port: 5438
      redis-port: 6673

  test-docker-build-push:
    name: Test building / push reusable workflow
    uses: ./.github/workflows/docker-build-push.yml
    with:
      docker-image: ghcr.io/aplinkosministerija/example
      docker-context: tests/moleculer-demo
      environment: test
      runs-on: ubuntu-latest
      latest-tag: true
      push: false
